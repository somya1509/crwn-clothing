{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyCb9lVwsAsQfnOeKOUNL05ocAehM4WerlE\",\n  authDomain: \"crwn-clothing-somya.firebaseapp.com\",\n  databaseURL: \"https://crwn-clothing-somya.firebaseio.com\",\n  projectId: \"crwn-clothing-somya\",\n  storageBucket: \"crwn-clothing-somya.appspot.com\",\n  messagingSenderId: \"162029751410\",\n  appId: \"1:162029751410:web:fc021a3eb6ae5fa21246eb\",\n  measurementId: \"G-K3V08QEDYD\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error);\n    }\n  }\n\n  return userRef;\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/react/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GACR;AACIC,EAAAA,MAAM,EAAE,yCADZ;AAEIC,EAAAA,UAAU,EAAE,qCAFhB;AAGIC,EAAAA,WAAW,EAAE,4CAHjB;AAIIC,EAAAA,SAAS,EAAE,qBAJf;AAKIC,EAAAA,aAAa,EAAE,iCALnB;AAMIC,EAAAA,iBAAiB,EAAE,cANvB;AAOIC,EAAAA,KAAK,EAAE,2CAPX;AAQIC,EAAAA,aAAa,EAAE;AARnB,CADJ;AAYAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB;AAEA,OAAO,MAAMU,yBAAyB,GAAG,OAAOC,QAAP,EAAkBC,cAAlB,KAAqC;AAC5E,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAqB;AACjB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAuBV,QAA7B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAG;AACD,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGV;AAJa,OAAZ,CAAN;AAOD,KARD,CAQE,OAAMa,KAAN,EAAa;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAnC;AACH;AAEN;;AACD,SAAOZ,OAAP;AACC,CAzBI;AA2BP,OAAO,MAAMe,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACP,OAAO,MAAMd,SAAS,GAAGf,QAAQ,CAACe,SAAT,EAAlB;AAEP,MAAMe,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAG;AAAX,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe9B,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = \r\n    {\r\n        apiKey: \"AIzaSyCb9lVwsAsQfnOeKOUNL05ocAehM4WerlE\",\r\n        authDomain: \"crwn-clothing-somya.firebaseapp.com\",\r\n        databaseURL: \"https://crwn-clothing-somya.firebaseio.com\",\r\n        projectId: \"crwn-clothing-somya\",\r\n        storageBucket: \"crwn-clothing-somya.appspot.com\",\r\n        messagingSenderId: \"162029751410\",\r\n        appId: \"1:162029751410:web:fc021a3eb6ae5fa21246eb\",\r\n        measurementId: \"G-K3V08QEDYD\"\r\n      };\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const createUserProfileDocument = async (userAuth , additionalData) => {\r\n  if(!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n  \r\n  const snapShot = await userRef.get();\r\n\r\n  if(!snapShot.exists) {\r\n      const {displayName, email} = userAuth;\r\n      const createdAt = new Date();\r\n\r\n      try{\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          ...additionalData\r\n        });\r\n\r\n      } catch(error) {\r\n            console.log('error creating user', error);\r\n        }\r\n      \r\n  }\r\n  return userRef;\r\n  };\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt : 'select_account'});\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}