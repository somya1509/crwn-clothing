{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\react\\\\crwn-clothing\\\\src\\\\components\\\\with-spinner\\\\with-spinner.component.jsx\";\nimport React from 'react';\nimport { SpinnerOverlay, SpinnerContainer } from './with-spinner.styles';\n\nconst WithSpinner = WrappedComponent => ({\n  isLoading,\n  ...otherProps\n}) => {\n  return isLoading ? /*#__PURE__*/React.createElement(SpinnerOverlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SpinnerContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(WrappedComponent, Object.assign({}, otherProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default WithSpinner;","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/react/crwn-clothing/src/components/with-spinner/with-spinner.component.jsx"],"names":["React","SpinnerOverlay","SpinnerContainer","WithSpinner","WrappedComponent","isLoading","otherProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,uBAAjD;;AAEA,MAAMC,WAAW,GAAGC,gBAAgB,IAAI,CAAC;AAACC,EAAAA,SAAD;AAAY,KAAGC;AAAf,CAAD,KAA+B;AAEnE,SAAOD,SAAS,gBACZ,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADY,gBAKZ,oBAAC,gBAAD,oBAAsBC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALJ;AAOH,CATD;;AAWA,eAAeH,WAAf","sourcesContent":["import React from 'react';\r\nimport { SpinnerOverlay, SpinnerContainer } from './with-spinner.styles';\r\n\r\nconst WithSpinner = WrappedComponent => ({isLoading, ...otherProps}) =>{ \r\n\r\n    return isLoading ? (\r\n        <SpinnerOverlay>\r\n            <SpinnerContainer />\r\n        </SpinnerOverlay>\r\n    ) : (\r\n        <WrappedComponent {...otherProps} />\r\n    )\r\n}\r\n\r\nexport default WithSpinner;"]},"metadata":{},"sourceType":"module"}