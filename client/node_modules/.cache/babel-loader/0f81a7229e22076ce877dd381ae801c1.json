{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from 'firebase';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionAsync() {\n  yield console.log('I am fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/react/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,IAAnB,EAAyBC,GAAzB,QAAmC,oBAAnC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,UAA3D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAO,UAAUC,oBAAV,GAAgC;AACnC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AACA,MACA;AAAC,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACD,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACI,+BAAD,EAAkCQ,QAAlC,CAAjC;AACA,UAAMX,GAAG,CAACI,uBAAuB,CAACS,cAAD,CAAxB,CAAT;AACH,GALG,CAKH,OAAMC,KAAN,EAAY;AACT,UAAMd,GAAG,CAACK,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACA;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMlB,SAAS,CACXG,eAAe,CAACgB,uBADL,EAEXX,oBAFW,CAAf;AAIH","sourcesContent":["import {takeEvery, call, put} from 'redux-saga/effects';\r\n\r\nimport ShopActionTypes from './shop.types';\r\nimport { firestore, convertCollectionsSnapshotToMap } from 'firebase';\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\r\n\r\nexport function* fetchCollectionAsync(){\r\n    yield console.log('I am fired');\r\n    try\r\n    {const collectionRef = firestore.collection('collections');\r\n    const snapshot = yield collectionRef.get();\r\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n    yield put(fetchCollectionsSuccess(collectionsMap));\r\n}catch(error){\r\n    yield put(fetchCollectionsFailure(error.message))\r\n}\r\n} \r\n\r\nexport function* fetchCollectionStart() {\r\n    yield takeEvery (\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionAsync\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}