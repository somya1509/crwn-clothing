{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\react\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport CollectionsOverview from '../../components/collection-overview/collection-overview.component';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { UpdateCollections } from '../../redux/shop/shop.actions';\nimport { connect } from 'react-redux';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchTOProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(UpdateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchTOProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/react/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverview","Route","CollectionPage","firestore","convertCollectionsSnapshotToMap","UpdateCollections","connect","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","updateCollections","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","render","match","path","mapDispatchTOProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,mBAAP,MAAgC,oEAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAIA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,uBADmC,GACT,IADS;AAAA;;AAGvCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACC,MAAAA;AAAD,QAAsB,KAAKC,KAAjC;AACA,UAAMC,aAAa,GAAGV,SAAS,CAACW,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAiB;AACvC,YAAMC,cAAc,GAAGb,+BAA+B,CAACY,QAAD,CAAtD;AACAL,MAAAA,iBAAiB,CAACM,cAAD,CAAjB;AACF,KAHD;AAIH;;AAEGC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKP,KAArB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEpB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEmB,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAElB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADJ;AAMH;;AArBkC;;AAwBvC,MAAMmB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCX,EAAAA,iBAAiB,EAAGM,cAAc,IAAIK,QAAQ,CAACjB,iBAAiB,CAACY,cAAD,CAAlB;AADV,CAAL,CAAnC;;AAKA,eAAeX,OAAO,CAAC,IAAD,EAAOe,kBAAP,CAAP,CAAkCd,QAAlC,CAAf","sourcesContent":["import React from 'react';\r\n\r\nimport CollectionsOverview from '../../components/collection-overview/collection-overview.component';\r\nimport { Route } from 'react-router-dom';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\nimport { UpdateCollections } from '../../redux/shop/shop.actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nclass ShopPage extends React.Component {\r\n    unsubscribeFromSnapshot = null;\r\n\r\ncomponentDidMount(){\r\n    const {updateCollections} = this.props;\r\n    const collectionRef = firestore.collection('collections');\r\n\r\n    collectionRef.onSnapshot(async snapshot=> {\r\n       const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n       updateCollections(collectionsMap);\r\n    })\r\n}\r\n\r\n    render(){\r\n        const {match} = this.props;\r\n        return(\r\n            <div className='shop-page'>\r\n            <Route exact path={`${match.path}`} component={CollectionsOverview} />\r\n            <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\r\n            </div> \r\n               );\r\n    }\r\n}\r\n\r\nconst mapDispatchTOProps = dispatch => ({\r\n    updateCollections : collectionsMap => dispatch(UpdateCollections(collectionsMap))\r\n})\r\n\r\n\r\nexport default connect(null, mapDispatchTOProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}