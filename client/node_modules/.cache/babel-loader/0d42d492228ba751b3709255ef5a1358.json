{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\react\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport CollectionsOverview from '../../components/collection-overview/collection-overview.component';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { UpdateCollections } from '../../redux/shop/shop.actions';\nimport { connect } from 'react-redux';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 68\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 78\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchTOProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(UpdateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchTOProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/react/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverview","Route","CollectionPage","firestore","convertCollectionsSnapshotToMap","UpdateCollections","connect","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","updateCollections","props","collectionRef","collection","get","then","snapshot","collectionsMap","setState","render","match","path","mapDispatchTOProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,mBAAP,MAAgC,oEAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACP,mBAAD,CAAlD;AAEA,MAAMS,yBAAyB,GAAGF,WAAW,CAACL,cAAD,CAA7C;;AAEA,MAAMQ,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,KAFmC,GAE3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAF2B;AAAA,SAMnCC,uBANmC,GAMT,IANS;AAAA;;AAQvCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACC,MAAAA;AAAD,QAAsB,KAAKC,KAAjC;AACA,UAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAG;AACjC,YAAMC,cAAc,GAAGnB,+BAA+B,CAACkB,QAAD,CAAtD;AACAN,MAAAA,iBAAiB,CAACO,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACX,QAAAA,OAAO,EAAE;AAAV,OAAd;AACF,KAJD;AAKH;;AAEGY,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKT,KAArB;AACA,UAAM;AAACJ,MAAAA;AAAD,QAAY,KAAKD,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEc,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGV,KAAD,iBAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAGJ;AAA5C,SAAyDI,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAKV,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEJ;AAAtC,SAAkDI,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADJ;AAMH;;AA5BkC;;AA+BvC,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACpCb,EAAAA,iBAAiB,EAAGO,cAAc,IAAIM,QAAQ,CAACxB,iBAAiB,CAACkB,cAAD,CAAlB;AADV,CAAL,CAAnC;;AAKA,eAAejB,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkClB,QAAlC,CAAf","sourcesContent":["import React from 'react';\r\n\r\nimport CollectionsOverview from '../../components/collection-overview/collection-overview.component';\r\nimport { Route } from 'react-router-dom';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\nimport { UpdateCollections } from '../../redux/shop/shop.actions';\r\nimport { connect } from 'react-redux';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\n\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n\r\n    state = {\r\n        loading: true \r\n    }\r\n\r\n    unsubscribeFromSnapshot = null;\r\n\r\ncomponentDidMount(){\r\n    const {updateCollections} = this.props;\r\n    const collectionRef = firestore.collection('collections');\r\n\r\n    collectionRef.get().then(snapshot=> {\r\n       const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n       updateCollections(collectionsMap);\r\n       this.setState({loading: false});\r\n    });\r\n}\r\n\r\n    render(){\r\n        const {match} = this.props;\r\n        const {loading} = this.state;\r\n        return(\r\n            <div className='shop-page'>\r\n            <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading ={loading} {...props} />} />\r\n            <Route path={`${match.path}/:collectionId`} render = {(props) => <CollectionPageWithSpinner isLoading={loading}{...props} />} />\r\n            </div> \r\n               );\r\n    } \r\n}\r\n\r\nconst mapDispatchTOProps = dispatch => ({\r\n    updateCollections : collectionsMap => dispatch(UpdateCollections(collectionsMap))\r\n})\r\n\r\n\r\nexport default connect(null, mapDispatchTOProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}